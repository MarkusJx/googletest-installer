name: test

on:
  push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install googletest
        uses: MarkusJx/googletest-installer@v0.0.1
        id: install_gtest
      - run: ls | grep g
        working-directory: /usr/include
      - name: echo library_dir
        if: matrix.os == 'windows-latest'
        run: "echo \"Library_dir: ${{ steps.install_gtest.outputs.library_dir }}\""
      - name: echo include_dir
        if: matrix.os == 'windows-latest'
        run: "echo \"Include_dir: ${{ steps.install_gtest.outputs.include_dir }}\""
      - name: configure test not windows
        if: matrix.os != 'windows-latest'
        run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
        working-directory: test
      - name: build test not windows
        if: matrix.os != 'windows-latest'
        run: cmake --build .
        working-directory: test/build
      - name: configure windows
        run: cmake -DLINK_DIRECTORIES=steps.install_gtest.outputs.library_dir . -B build
        if: matrix.os == 'windows-latest'
        working-directory: test
      - name: build windows
        if: matrix.os == 'windows-latest'
        run: cmake --build . --config Release
        working-directory: test/build
      - name: run test not windows
        if: matrix.os != 'windows-latest'
        run: ./test
        working-directory: test/build
      - name: run test windows
        if: matrix.os == 'windows-latest'
        run: ./test.exe
        working-directory: test/build
