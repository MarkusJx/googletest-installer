name: test

on:
  push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install googletest not macOs
        uses: ./
        if: matrix.os != 'macOs-latest'
      - name: install gcc-10 on macOs
        if: matrix.os == 'macOs-latest'
        run: brew install gcc@10
      - name: install googletest macOs
        if: matrix.os == 'macOs-latest'
        uses: ./
        with: # Set CC_path and CXX_path to gcc-10 and g++-10
          CC_path: /usr/local/bin/gcc-10
          CXX_path: /usr/local/bin/g++-10
      - name: configure test not windows
        if: matrix.os != 'windows-latest'
        run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
        working-directory: test
      - name: build test not windows
        if: matrix.os != 'windows-latest'
        run: cmake --build .
        working-directory: test/build
      - name: configure windows
        run: cmake . -B build
        if: matrix.os == 'windows-latest'
        working-directory: test
      - name: build windows
        if: matrix.os == 'windows-latest'
        run: cmake --build . --config Release
        working-directory: test/build
      - name: run test not windows
        if: matrix.os != 'windows-latest'
        run: ./test
        working-directory: test/build
      #- name: run test windows
      #  if: matrix.os == 'windows-latest'
      #  run: test.exe
      #  working-directory: test/build
      #  shell: cmd
